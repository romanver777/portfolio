"use strict";!function(){var e,o,r=document.querySelector(".preloader"),i=document.querySelector(".preloader-bg"),c=document.querySelector(".container-index"),t=["./assets/img/content/forest_prel_bg.jpg"],s=["./assets/js/foundation.js"],a=["./assets/img/content/bg_forest_1800.jpg","./assets/img/content/water-maps.jpg"],u=0,l=0,d=!m()&&1200<=window.innerWidth?[].concat(t,s,a).length:t.length+1;function m(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||"ontouchstart"in document.documentElement}function f(e){var t=document.querySelector(".progress__number"),n=100*e/d,e=Math.round(10/d);o&&clearInterval(o),o=setInterval(function(){n<=(u+=1)&&(clearInterval(o),u=n),t.innerHTML=u},e)}function _(){var e,t,n;location.toString().includes("auth")&&(e=document.querySelector(".auth-wrap"),t=document.querySelector(".front"),n=document.querySelector(".back"),t.classList.add("front_flipped"),n.classList.add("back_flipped"),e.classList.add("auth-wrap_display-none")),setTimeout(function(){c.classList.add("container-index_visible"),r.classList.add("preloader_hided")},1e3)}t=t,(e=new Image).src=t[0],e.onload=function(){var e,t,n;f(++l),i.classList.add("preloader-bg_visible"),!m()&&1200<=window.innerWidth?Promise.all(s.map(function(e){return n=e,new Promise(function(e){var t=document.createElement("script");t.src=n,document.head.append(t),t.onload=function(){f(++l),e()}});var n})).then(function(){return Promise.all(a.map(function(e){return n=e,new Promise(function(e){var t=new Image;t.src=n,t.onload=function(){f(++l),e()}});var n}))}).then(function(){l===d&&(c.classList.remove("bg-forest-index"),_())}):(e=document.querySelector(".bg-forest-index"),t='url("',t=(e=window.getComputedStyle(e).backgroundImage).indexOf(t)+t.length,(n=new Image).src=e.slice(t,-'")'.length),n.onload=function(){f(++l),_()})}}(),function(){var t=document.querySelector(".auth-wrap"),e=document.querySelector(".auth__link"),n=document.querySelector(".front"),o=document.querySelector(".back"),r=document.querySelector(".butt__link_home");e.addEventListener("click",function(){n.classList.add("front_flipped"),o.classList.add("back_flipped"),t.classList.add("auth-wrap_display-none")}),r.addEventListener("click",function(e){e.preventDefault(),n.classList.remove("front_flipped"),o.classList.remove("back_flipped"),t.classList.remove("auth-wrap_display-none")})}(),function(){var t,e=document.querySelector(".butt__link_login"),a=document.querySelector(".form__name"),u=document.querySelector(".form__pass"),l=document.querySelector(".checkbox__input"),d=document.querySelector(".radio-btn__input_yes"),m=document.querySelector(".messageBox"),f=document.querySelector(".messageBox__text"),_=document.querySelector(".form-auth");e.addEventListener("click",function(e){var n,o,r,i,c,s;e.preventDefault(),Promise.all([(e=a.value,c=/^[a-zA-Z0-9]+$/,s=e.trim(),new Promise(function(e,t){return c.test(s)&&2<s.length?e(s):t("Введите логин длиной от ".concat(3," символов"))})),(e=u.value,r=[4,15],i=e.trim(),new Promise(function(e,t){return i.length>r[0]&&i.length<=r[1]?e(i):t("Введите пароль длиной от ".concat(r[0]+1," до ").concat(r[1]," символов"))})),(o=l,new Promise(function(e,t){return o.checked?e():t("Роботам вход воспрещен")})),(n=d,new Promise(function(e,t){return n.checked?e():t("Роботам вход воспрещен")}))]).then(function(){clearTimeout(t),m.classList.remove("messageBox_visible"),setTimeout(function(){f.innerHTML="Форма отправлена",m.classList.add("messageBox_visible"),_.reset()},800),setTimeout(function(){m.classList.remove("messageBox_visible")},3e3)}).catch(function(e){t?(clearTimeout(t),m.classList.remove("messageBox_visible"),setTimeout(function(){f.innerHTML=e,m.classList.add("messageBox_visible")},800)):(f.innerHTML=e,m.classList.add("messageBox_visible")),t=setTimeout(function(){m.classList.remove("messageBox_visible"),t=null},3e3)})})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
